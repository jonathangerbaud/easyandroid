ext.deps = [:]

// ### Versions ###
def versions = [:]
    versions.android_gradle_plugin  = '3.3.1'
    versions.android_gradle_kotlin  = "1.3.21"
//    versions.android_gradle_kotlin = "1.3.21-release-Studio3.3-1"
    versions.google_service         = "3.2.0"
    versions.androidX               = "1.0.0"
    versions.androidX2              = "2.0.0-rc01"
    versions.constraintlayout       = "1.1.3"
    versions.fresco                 = "1.7.1"
    versions.glide                  = "4.6.1"
    versions.gms_location           = "16.0.0"
    versions.gms_maps               = "16.1.0"
    versions.iab                    = "1.0.44"
    versions.lifecycle              = "1.1.1"
    versions.material               = "1.0.0"
    versions.merlin                 = "1.1.7"
    versions.okhttp3                = "3.9.1"
    versions.picasso                = "2.5.2"
    versions.retrofit               = "2.4.0"
    versions.room                   = "2.1.0-alpha04"
    versions.timber                 = "4.7.1"


// ### Dependencies ###

def deps = [:]
    deps.android_gradle_plugin          = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
    deps.android_gradle_kotlin          = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.android_gradle_kotlin"
    deps.google_service                 = "com.google.gms:google-services:$versions.google_service"
    deps.kotlin                         = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.android_gradle_kotlin"
    deps.material                       = "com.google.android.material:material:$versions.material"
    deps.merlin                         = "com.novoda:merlin:$versions.merlin"
    deps.iab                            = "com.anjlab.android.iab.v3:library:$versions.iab"
ext.deps = deps

def kotlinx = [:]
    def coroutines = [:]
        coroutines.core                 = "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.27.0-eap13"
        coroutines.android              = "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.27.0-eap13"
    kotlinx.coroutines = coroutines
deps.kotlinx = kotlinx

def androidx = [:]
    androidx.core                       = "androidx.core:core:$versions.androidX"
    androidx.core_ktx                   = "androidx.core:core-ktx:$versions.androidX"
    androidx.appcompat                  = "androidx.appcompat:appcompat:$versions.androidX"
    androidx.constraintlayout           =  "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
    androidx.constraintlayout_solver    =  "androidx.constraintlayout:constraintlayout-solver:$versions.constraintlayout"
    androidx.recyclerview               = "androidx.recyclerview:recyclerview:$versions.androidX"

    def lifecycle = [:]
        lifecycle.livedata              = "androidx.lifecycle:lifecycle-livedata:$versions.androidX2"
        lifecycle.livedata_core         = "androidx.lifecycle:lifecycle-livedata-core:$versions.androidX2"
        lifecycle.common                = "androidx.lifecycle:lifecycle-common:$versions.androidX2"
        lifecycle.common_java8          = "androidx.lifecycle:lifecycle-common-java8:$versions.androidX2"
        lifecycle.extensions            = "androidx.lifecycle:lifecycle-extensions:$versions.androidX2"
        lifecycle.viewmodel             = "androidx.lifecycle:lifecycle-viewmodel:$versions.androidX2"
    androidx.lifecycle = lifecycle

    def room = [:]
        room.runtime                    = "androidx.room:room-runtime:$versions.room"
        room.compiler                   = "androidx.room:room-compiler:$versions.room"
        room.coroutines                 = "androidx.room:room-coroutines:$versions.room"
    androidx.room = room
deps.androidx = androidx

def gms = [:]
    gms.location                        = "com.google.android.gms:play-services-location:$versions.gms_location"
    gms.maps                            = "com.google.android.gms:play-services-maps:$versions.gms_maps"
deps.gms = gms

def retrofit2 = [:]
    retrofit2.retrofit                  = "com.squareup.retrofit2:retrofit:$versions.retrofit"
    retrofit2.converter_gson            = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    retrofit2.converter_scalars         = "com.squareup.retrofit2:converter-scalars:$versions.retrofit"
    retrofit2.rx_java2_adapter          = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
    retrofit2.kotlin_coroutines_adapter = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"
deps.retrofit2 = retrofit2

def okhttp3 = [:]
    okhttp3.okhttp                      = "com.squareup.okhttp3:okhttp:$versions.okhttp3"
    okhttp3.logging_interceptor         = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp3"
deps.okhttp3 = okhttp3

def images = [:]
    images.picasso                      = "com.squareup.picasso:picasso:$versions.picasso"
    images.fresco                       = "com.facebook.fresco:fresco:$versions.fresco"

    def glide = [:]
        glide.glide                     = "com.github.bumptech.glide:glide:$versions.glide"
        glide.compiler                  = "com.github.bumptech.glide:compiler:$versions.glide"
    images.glide = glide
deps.images = images

def logging = [:]
    logging.timber                      = "com.jakewharton.timber:timber:$versions.timber"
deps.logging = logging


// ### Modules ###

def libraries = [:]
    libraries.core          = ":core"
    libraries.inappbilling  = ":inappbilling"
    libraries.network       = ":network"

    def gms2 = [:]
        gms2.location       = ":gms-location"
        gms2.maps           = ":gms-maps"
    libraries.gms = gms2

    def ui = [:]
        ui.core             = ":ui-core"
        ui.recyclerview     = ":ui-recyclerview"
        ui.state            = ":ui-state"
    libraries.ui = ui
ext.libraries = libraries



// ### Repos ###

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    //handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.maven { url 'https://jitpack.io' }
}
ext.addRepos = this.&addRepos